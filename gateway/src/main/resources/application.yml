server:
  port: 8000

eureka:
  client:
    serviceUrl:
      defaultZone: http://lyy:lyy123@localhost:8761/eureka

# hystrix 信号量隔离，n秒后自动超时，进行服务降级返回
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 4000
    fallbackcmd:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 2000

spring:
  application:
    name: gateway
  redis:
    host: localhost
    password:
    database: 0
  cloud:
    gateway:
      discovery:
        locator:
          # 配置网关可路由注册中心的服务
          enabled: true
          # 配置网关路由的实例服务名小写
          lower-case-service-id: true
      # 代表默认的过滤器，这是一个全局的过滤器，不属于任何一个route
      default-filters:
        - name: Hystrix
          args:
            name: default
            fallbackUri: 'forward:/gateWayDefaultBack2'
#      routes:
#        # 降级处理
#        - id: hystrix_route
#          uri: http://localhost:8000/
#          predicates:
#            - Method=GET
#          filters:
#            # 熔断降级配置
#            - name: Hystrix
#              args:
#                name: fallbackcmd
#                fallbackUri: 'forward:/gateWayDefaultBack'
#        # 请求限流
#        - id: request_rate_limit_route
#          uri: http:localhost:8001/
#          predicates:
#            - Method=GET
#          filters:
#            - name: RequestRateLimiter
#            args:
#              # 用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象。
#              key-resolver: '#{@hostAddrKeyResolver}'
#              # 令牌桶每秒填充平均速率(每秒允许处理的请求数量)
#              redis-rate-limiter.replenishRate: 1
#              # 令牌桶总容量(每秒最多处理的请求数量)
#              redis-rate-limiter.burstCapacity: 3